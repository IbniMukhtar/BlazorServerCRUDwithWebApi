@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using Demo.ApiClient
@inject AuthenticationService authenticationService

<RadzenLayout>
    <RadzenHeader>
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <div style="display: flex; align-items: center;">
                <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
                <RadzenLabel Text="Header" />
            </div>
            <div class="rz-text-align-center">
                <RadzenProfileMenu>
                    <Template>
                        <RadzenGravatar Email="user@example.com">
                        </RadzenGravatar>
                    </Template>
                    <ChildContent>
                        <RadzenProfileMenuItem Text="Buttons" Path="buttons" Icon="account_circle"></RadzenProfileMenuItem>
                        <RadzenProfileMenuItem Text="Menu" Path="menu" Icon="line_weight"></RadzenProfileMenuItem>
                        <RadzenProfileMenuItem Text="FileInput" Path="fileinput" Icon="attach_file"></RadzenProfileMenuItem>
                        <RadzenProfileMenuItem Text="Dialog" Path="dialog" Icon="perm_media"></RadzenProfileMenuItem>
                        <form @onsubmit="HandleLogout" method="post">
                            <RadzenButton type="submit" Text="Logout" Icon="privacy_tip" ButtonStyle="ButtonStyle.Secondary" class="m-4" />
                        </form>
                    </ChildContent>
                </RadzenProfileMenu>
            </div>
         

           
        </div>
    </RadzenHeader>

    <RadzenSidebar Responsive="false" Style="width: max-content">
        <RadzenPanelMenu DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="false">
            <RadzenPanelMenuItem Text="Dashboard" Icon="home" Path="dindex" />
            <RadzenPanelMenuItem Text="Calculator" Icon="dashboard" Path="calculator" />
            <RadzenPanelMenuItem Text="UI Fundamentals" Icon="auto_awesome">
                <RadzenPanelMenuItem Text="Counter" Icon="color_lens" Path="counter" />
                <RadzenPanelMenuItem Text="Colors" Icon="invert_colors" />
            </RadzenPanelMenuItem>
        </RadzenPanelMenu>
    </RadzenSidebar>

    <RadzenBody>
        <div class="main">
            <div class="content px-4">
                @Body
            </div>
        </div>
    </RadzenBody>

    <RadzenFooter>
        Footer
    </RadzenFooter>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;
    string? errorMessage; // Define the errorMessage variable here

    private async Task HandleLogout()
    {
        // Call the logout method from your authentication service
        bool logoutSuccessful = await authenticationService.Logout();

        // Check if logout was successful
        if (logoutSuccessful)
        {
            // Redirect to the login page or perform any other necessary actions
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Handle logout failure (e.g., display an error message)
            errorMessage = "Logout failed. Please try again.";
        }
    }


}
